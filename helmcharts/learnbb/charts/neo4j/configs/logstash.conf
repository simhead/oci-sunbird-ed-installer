input {
  file {
    start_position =>"beginning"
    type => "{{ .Values.logstash.input.type }}"
    path => ["{{ .Values.logstash.input.file_path }}"]
    sincedb_path => "{{ .Values.logstash.input.sincedb_path }}"
  }
}
filter {
  grok {
    match => [ "message",
              "%{TIMESTAMP_ISO8601:timestamp} %{GREEDYDATA:msg}"]
  }
  mutate {
      gsub => [ "message","%{timestamp}","" ]
      strip => [ "message" ]
  }
  json {
      source => "message"
  }
}
output {
  kafka {
    bootstrap_servers => "{{ .Values.global.kafka.host }}:{{ .Values.global.kafka.port }}"
    codec => plain {
        format => "%{message}"
    }
    message_key => "%{nodeUniqueId}"
    topic_id => "{{ .Values.learning_graph_events}}"
    retries => 20
    retry_backoff_ms => 180000
  }
}